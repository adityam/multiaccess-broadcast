/* 
 * part1.mac
 * Aditya Mahajan <adityam@umich.edu>
 *
 * This file verifies the form of the optimal policy for 
 * p < s_1
 */

batchload("initialize.mac") ;

/* Value functions */

kill(p) ;
q : 1 - p ;

m : 2 ;

range : [p, s(m+1), s(m)] ;

low : false ;

D : '(1 + p^2 + p^3) ;
J : (r*p*(1-ratsimp(f(0))/D)) ;

vlow(n) := q*(1-q^n)*'J/p + r*q^(n+1) -r*q + 'v_pp ;
vhigh(n) := r*Ap(n) + 'vlow(1) - 'J ;
/*v(n) := if n <= m then vlow(n) else vhigh(n) ; */
if low then
  v(n) := vlow(n) 
else 
  v(n) := vhigh(n) ;

v_11 :  r ;
v_pp :  r*f(1)/D ;
v_p1 :  'J  ;


/* Value function update */
array( check, 4) ;
if low then
  check[1] : '(v(n) + J - w11(n)) 
else
  check[1] : '(v(n) + J - w01(n)) ;

check[2] : '(v_p1 + J - w01_p1) ;
check[3] : '(v_11 + J - w01_11) ;
check[4] : '(v_pp + J - w11_pp) ;

/* Value function optimality */
array( difference_n, 2) ;
difference_n[1] : '(w01(n) - w10(n)) ;
difference_n[2] : '(w01(n) - w11(n)) ;

array( difference_1, 2) ;
difference_1[1] : '(w11(n) - w01(n)) ;
difference_1[2] : '(w11(n) - w10(n)) ;


array( difference_p1, 2) ;
difference_p1[1] : '(w01_p1 - w10_p1) ;
difference_p1[2] : '(w01_p1 - w11_p1) ;

array( difference_11, 2) ;
difference_11[1] : '(w01_11 - w10_11) ;
difference_11[2] : '(w01_11 - w11_11) ;

array( difference_pp, 2) ;
difference_pp[1] : '(w11_pp - w10_pp) ;
difference_pp[2] : '(w11_pp - w01_pp) ;

/* Perform all the calculations */
batchload("calculations-general.mac") ;

/*
 vim: ft=maxima
*/
